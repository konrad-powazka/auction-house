{"version":3,"sources":["webpack:///webpack/bootstrap d574799ed7bed8a02933","webpack:///./Scripts/app/Application.ts","webpack:///./Scripts/app/UI/Auctions/CreateAuctionComponent.ts","webpack:///./Scripts/app/UI/Auctions/CreateAuctionCtrl.ts","webpack:///./Scripts/app/CommandHandling/CommandHandlingErrorType.ts","webpack:///./Scripts/app/CommandHandling/GeneratedCommandHandlers.ts","webpack:///./Scripts/app/CommandHandling/CommandHandler.ts","webpack:///./Scripts/app/Security/SecurityService.ts","webpack:///./Scripts/app/UI/Shared/SecurityUiService.ts","webpack:///./Scripts/app/UI/Shared/LoginDialogComponent.ts","webpack:///./Scripts/app/UI/Shared/LoginDialogCtrl.ts","webpack:///./Scripts/app/UI/Shared/ApplicationCtrl.ts","webpack:///./Scripts/app/Routing.ts","webpack:///./Scripts/app/QueryHandling/GeneratedQueryHandlers.ts","webpack:///./Scripts/app/QueryHandling/QueryHandler.ts","webpack:///./Scripts/app/UI/Auctions/DisplayAuctionComponent.ts","webpack:///./Scripts/app/UI/Auctions/DisplayAuctionCtrl.ts"],"names":[],"mappings":"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","file":"Scripts/app/ApplicationBundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d574799ed7bed8a02933","import { INamedComponentOptions } from './Infrastructure/INamedComponentOptions';\r\nimport { CreateAuctionComponent } from './UI/Auctions/CreateAuctionComponent';\r\nimport { AngularCommandHandlersRegistry } from './CommandHandling/GeneratedCommandHandlers';\r\nimport {SecurityService} from './Security/SecurityService';\r\nimport {SecurityUiService} from './UI/Shared/SecurityUiService';\r\nimport {LoginDialogComponent} from './UI/Shared/LoginDialogComponent';\r\nimport {ApplicationCtrl} from './UI/Shared/ApplicationCtrl';\r\nimport {Routing} from './Routing';\r\nimport {AngularQueryHandlersRegistry} from './QueryHandling/GeneratedQueryHandlers';\r\nimport {DisplayAuctionComponent} from './UI/Auctions/DisplayAuctionComponent';\r\n\r\nexport class Application {\r\n    private static components: INamedComponentOptions[] = [\r\n        new CreateAuctionComponent(),\r\n        new DisplayAuctionComponent(),\r\n        new LoginDialogComponent()\r\n    ];\r\n\r\n    static bootstrap(): void {\r\n        const module = angular.module('auctionHouse',\r\n        [\r\n            'ui.router', 'formly', 'formlyBootstrap', 'ngMessages', 'ngAnimate', 'ui.bootstrap',\r\n            'ui.bootstrap.datetimepicker'\r\n        ]);\r\n\r\n        module.controller('applicationCtrl', ApplicationCtrl);\r\n\r\n        this.registerSerivces(module);\r\n\r\n        for (let component of Application.components) {\r\n            module.component(component.registerAs, component);\r\n        }\r\n\r\n        Application.configureModule.$inject = ['$stateProvider'];\r\n        module.config(Application.configureModule);\r\n        Application.runModule.$inject = ['formlyConfig', 'formlyValidationMessages'];\r\n        module.run(Application.runModule);\r\n    };\r\n\r\n    private static registerSerivces(module: ng.IModule): void {\r\n        module.service(AngularCommandHandlersRegistry.commandHandlers);\r\n        module.service(AngularQueryHandlersRegistry.queryHandlers);\r\n        module.service('securityService', SecurityService);\r\n        module.service('securityUiService', SecurityUiService);\r\n    }\r\n\r\n    private static configureModule($stateProvider: ng.ui.IStateProvider): void {\r\n        Routing.configure($stateProvider);\r\n    }\r\n\r\n    private static runModule(formlyConfig: AngularFormly.IFormlyConfig,\r\n        formlyValidationMessages: AngularFormly.IValidationMessages): void {\r\n        Application.configureFormly(formlyConfig, formlyValidationMessages);\r\n    }\r\n\r\n    // Reference at http://angular-formly.com/#/example/other/error-summary\r\n    private static configureFormly(formlyConfig: AngularFormly.IFormlyConfig,\r\n        formlyValidationMessages: AngularFormly.IValidationMessages): void {\r\n\r\n        formlyConfig.setType({\r\n            name: 'dateTimePicker',\r\n            template: '<div><datetimepicker ng-model=\"model[options.key]\" show-spinners=\"true\" date-format=\"M/d/yyyy\" date-options=\"dateOptions\"></datetimepicker></div>',\r\n            wrapper: ['bootstrapLabel', 'bootstrapHasError'],\r\n            defaultOptions: {\r\n                templateOptions: {\r\n                    label: 'Time'\r\n                }\r\n            }\r\n        });\r\n\r\n        formlyConfig.setWrapper({\r\n            name: 'validation',\r\n            types: ['input', 'textarea', 'dateTimePicker'],\r\n            templateUrl: 'Template/Shared/AngularFormlyErrorMessagesInputWrapper'\r\n        });\r\n\r\n        formlyValidationMessages\r\n            .addTemplateOptionValueMessage('maxlength', 'maxlength', '', 'is the maximum length', 'Too long');\r\n\r\n        formlyValidationMessages\r\n            .addTemplateOptionValueMessage('minlength', 'minlength', '', 'is the minimum length', 'Too short');\r\n\r\n        formlyValidationMessages\r\n            .addTemplateOptionValueMessage('required', 'label', '', 'is required', 'This field is required');\r\n\r\n        formlyConfig.extras.errorExistsAndShouldBeVisibleExpression = 'fc.$touched || form.$submitted';\r\n    };\r\n}\r\n\r\nApplication.bootstrap();\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/Application.ts","import { CreateAuctionCtrl } from './CreateAuctionCtrl';\r\nimport { INamedComponentOptions } from '../../Infrastructure/INamedComponentOptions';\r\n\r\nexport class CreateAuctionComponent implements INamedComponentOptions {\r\n    controller = CreateAuctionCtrl;\r\n    templateUrl = 'Template/Auctions/Create';\r\n    registerAs = 'createAuction';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Auctions/CreateAuctionComponent.ts","import { CreateAuctionCommand } from '../../Messages/Commands';\r\nimport { CreateAuctionCommandHandler } from '../../CommandHandling/GeneratedCommandHandlers';\r\nimport { ICommandHandler } from '../../CommandHandling/ICommandHandler';\r\nimport { CommandHandlingErrorType } from '../../CommandHandling/CommandHandlingErrorType';\r\nimport {IQueryHandler as QueryHandler} from '../../QueryHandling/IQueryHandler';\r\nimport {GetAuctionDetailsQuery as AuctionDetailsQuery} from '../../Messages/Queries';\r\nimport {AuctionDetailsReadModel} from '../../ReadModel';\r\n\r\nexport class CreateAuctionCtrl implements ng.IController {\r\n    fields: AngularFormly.IFieldArray;\r\n    model: CreateAuctionCommand;\r\n    form: ng.IFormController;\r\n\r\n    static $inject = ['createAuctionCommandHandler', 'getAuctionDetailsQueryHandler', '$state'];\r\n\r\n    constructor(private createAuctionCommandHandler: ICommandHandler<CreateAuctionCommand>,\r\n        private getAuctionDetailsQueryHandler: QueryHandler<AuctionDetailsQuery, AuctionDetailsReadModel>,\r\n        private stateService: ng.ui.IStateService) {\r\n        this.model = {\r\n            id: this.guid(),\r\n            title: '',\r\n            description: '',\r\n            auctionId: this.guid(),\r\n            startingPrice: 5,\r\n            buyNowPrice: 10,\r\n            endDate: undefined as any\r\n        };\r\n        this.fields = [\r\n            {\r\n                key: 'title',\r\n                type: 'input',\r\n                templateOptions: {\r\n                    label: 'Title',\r\n                    required: true,\r\n                    minlength: 5,\r\n                    maxlength: 200\r\n                }\r\n            },\r\n            {\r\n                key: 'description',\r\n                type: 'textarea',\r\n                templateOptions: {\r\n                    label: 'Description',\r\n                    required: true,\r\n                    minlength: 10,\r\n                    maxlength: 10000\r\n                }\r\n            },\r\n            {\r\n                key: 'endDate',\r\n                type: 'dateTimePicker',\r\n                templateOptions: {\r\n                    label: 'End date and time',\r\n                    required: true\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    submit(): void {\r\n        if (!this.form.$valid) {\r\n            return;\r\n        }\r\n\r\n        this.createAuctionCommandHandler\r\n            .handle(this.model, true)\r\n            .then(() => {\r\n                alert('Success');\r\n                this.stateService.go('displayAuction', { auctionId: this.model.auctionId });\r\n            })\r\n            .catch((commandHandlingErrorType: CommandHandlingErrorType) =>\r\n                alert(`Command processing error: ${CommandHandlingErrorType[commandHandlingErrorType]}`));\r\n    }\r\n\r\n    private guid(): string {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return s4() +\r\n            s4() +\r\n            '-' +\r\n            s4() +\r\n            '-' +\r\n            s4() +\r\n            '-' +\r\n            s4() +\r\n            '-' +\r\n            s4() +\r\n            s4() +\r\n            s4();\r\n    }\r\n} //\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Auctions/CreateAuctionCtrl.ts","export enum CommandHandlingErrorType {\r\n    FailedToConnectToFeedbackHub,\r\n    FailedToQueue,\r\n    Timeout,\r\n    FailedToProcess,\r\n    FailedToSubscribeToReadModelChangeNotification\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/CommandHandling/CommandHandlingErrorType.ts","\r\nimport { CommandHandler } from './CommandHandler';\r\nimport * as Commands from '../Messages/Commands';\r\n\r\n\texport class CancelAuctionCommandHandler extends CommandHandler<Commands.CancelAuctionCommand> {\r\n\t\tprotected getCommandName(): string {\r\n\t\t\treturn 'CancelAuctionCommand';\r\n\t\t}\r\n\t}\r\n\texport class CreateAuctionCommandHandler extends CommandHandler<Commands.CreateAuctionCommand> {\r\n\t\tprotected getCommandName(): string {\r\n\t\t\treturn 'CreateAuctionCommand';\r\n\t\t}\r\n\t}\r\n\texport class MakeBidCommandHandler extends CommandHandler<Commands.MakeBidCommand> {\r\n\t\tprotected getCommandName(): string {\r\n\t\t\treturn 'MakeBidCommand';\r\n\t\t}\r\n\t}\r\n\r\nexport class AngularCommandHandlersRegistry {\r\n\tstatic commandHandlers: {[name: string]: ng.Injectable<Function>} = {\r\n\t\t\t\t\t\t\t'cancelAuctionCommandHandler': CancelAuctionCommandHandler,\r\n\t\t\t\t\t\t\t'createAuctionCommandHandler': CreateAuctionCommandHandler,\r\n\t\t\t\t\t\t\t'makeBidCommandHandler': MakeBidCommandHandler,\r\n\t\t\t\t\t};\r\n\t}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/CommandHandling/GeneratedCommandHandlers.ts","import { ICommandHandler } from './ICommandHandler';\r\nimport { CommandHandlingErrorType } from './CommandHandlingErrorType'\r\nimport {ICommand } from '../Messages/ICommand';\r\nimport { IEventAppliedToReadModelNotificationHubServer } from '../Infrastructure/IEventAppliedToReadModelNotificationHubServer';\r\nimport { NotifyOnEventsAppliedToReadModelResponse } from '../Infrastructure/NotifyOnEventsAppliedToReadModelResponse';\r\n\r\nexport abstract class CommandHandler<TCommand extends ICommand> implements ICommandHandler<TCommand> {\r\n    private static wasSignalrRInitialized = false;\r\n    private static commandHandlingSuccessCallbacks = $.Callbacks();\r\n    private static commandHandlingFailureCallbacks = $.Callbacks();\r\n    private static eventsAppliedToReadModelCallbacks = $.Callbacks();\r\n    private static eventAppliedToReadModelNotificationHubServer: IEventAppliedToReadModelNotificationHubServer;\r\n\r\n    static $inject = ['$http', '$q', '$timeout'];\r\n\r\n    constructor(\r\n        private httpService: ng.IHttpService,\r\n        private qService: ng.IQService,\r\n        private timeoutService: ng.ITimeoutService) {\r\n        if (!CommandHandler.wasSignalrRInitialized) {\r\n            const connection = ($.connection as any);\r\n            const commandHandlingFeedbackHub = connection.commandHandlingFeedbackHub;\r\n\r\n            commandHandlingFeedbackHub.client.handleCommandSuccess = (commandHandlingSucceededEvent: any): void => {\r\n                CommandHandler.commandHandlingSuccessCallbacks.fire(commandHandlingSucceededEvent);\r\n            };\r\n\r\n            commandHandlingFeedbackHub.client.handleCommandFailure = (commandHandlingFailedEvent: any): void => {\r\n                CommandHandler.commandHandlingFailureCallbacks.fire(commandHandlingFailedEvent);\r\n            };\r\n\r\n            const eventAppliedToReadModelNotificationHub = connection.eventAppliedToReadModelNotificationHub;\r\n\r\n            eventAppliedToReadModelNotificationHub.client.handleEventsAppliedToReadModel = (subscriptionId: string): void => {\r\n                CommandHandler.eventsAppliedToReadModelCallbacks.fire(subscriptionId);\r\n            };\r\n\r\n            CommandHandler\r\n                .eventAppliedToReadModelNotificationHubServer = eventAppliedToReadModelNotificationHub.server as any;\r\n\r\n            CommandHandler.wasSignalrRInitialized = true;\r\n        }\r\n    }\r\n\r\n    handle(command: TCommand, shouldWaitForEventsApplicationToReadModel: boolean): ng.IPromise<void> {\r\n        const url = `api/${this.getCommandName()}/Handle`;\r\n        const deferred = this.qService.defer<void>();\r\n        \r\n        this.connectSignalR()\r\n            .then(() => {\r\n                this.httpService.post<void>(url, command)\r\n                    .then(() => {\r\n                        var wasPromiseResolvedOrRejected = false;\r\n\r\n                        const commandHandlingSuccessCallback = (commandHandlingSucceededEvent: any) => {\r\n                            if (commandHandlingSucceededEvent.CommandId === command.id) {\r\n                                wasPromiseResolvedOrRejected = true;\r\n\r\n                                if (!shouldWaitForEventsApplicationToReadModel) {\r\n                                    deferred.resolve();\r\n                                } else {\r\n                                    this\r\n                                        .waitForEventsApplicationToReadModel(commandHandlingSucceededEvent\r\n                                            .publishedEventIds,\r\n                                            deferred);\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        const commandHandlingFailureCallback = (commandHandlingFailedEvent: any) => {\r\n                            if (commandHandlingFailedEvent.CommandId === command.id) {\r\n                                wasPromiseResolvedOrRejected = true;\r\n                                deferred.reject(CommandHandlingErrorType.FailedToProcess);\r\n                            }\r\n                        };\r\n                        CommandHandler.commandHandlingSuccessCallbacks.add(commandHandlingSuccessCallback);\r\n                        CommandHandler.commandHandlingFailureCallbacks.add(commandHandlingFailureCallback);\r\n\r\n                        const removeCallbacks = () => {\r\n                            CommandHandler.commandHandlingSuccessCallbacks.remove(commandHandlingSuccessCallback);\r\n                            CommandHandler.commandHandlingFailureCallbacks.remove(commandHandlingFailureCallback);\r\n                        };\r\n\r\n                        deferred.promise.finally(removeCallbacks);\r\n                        const commandHandlingTimeoutMilliseconds = 15 * 1000;\r\n\r\n                        this.timeoutService(commandHandlingTimeoutMilliseconds)\r\n                            .then(() => {\r\n                                if (!wasPromiseResolvedOrRejected) {\r\n                                    deferred.reject(CommandHandlingErrorType.Timeout);\r\n                                }\r\n                            });\r\n\r\n                    })\r\n                    .catch(() => deferred.reject(CommandHandlingErrorType.FailedToQueue));\r\n            })\r\n            .catch(() => deferred.reject(CommandHandlingErrorType.FailedToConnectToFeedbackHub));\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private waitForEventsApplicationToReadModel(publishedEventIds: string[], deferred: ng.IDeferred<void>): void {\r\n        CommandHandler\r\n            .eventAppliedToReadModelNotificationHubServer\r\n            .notifyOnEventsApplied(publishedEventIds)\r\n            .done((notifyOnEventsAppliedToReadModelResponse: NotifyOnEventsAppliedToReadModelResponse) => {\r\n                if (notifyOnEventsAppliedToReadModelResponse.wereAllEventsAlreadyApplied) {\r\n                    deferred.resolve();\r\n                    return;\r\n                }\r\n\r\n                const eventsAppliedCallback = (currentSubscriptionId: string) => {\r\n                    if (currentSubscriptionId === notifyOnEventsAppliedToReadModelResponse.subscriptionId) {\r\n                        deferred.resolve();\r\n                    }\r\n                };\r\n\r\n                CommandHandler.eventsAppliedToReadModelCallbacks.add(eventsAppliedCallback);\r\n                deferred.promise.finally(() => CommandHandler.eventsAppliedToReadModelCallbacks.remove(eventsAppliedCallback));\r\n                deferred.promise.catch(() => {\r\n                    // TODO: cancel subscription on timeout\r\n                });\r\n            })\r\n            .fail(() => deferred.reject(CommandHandlingErrorType.FailedToSubscribeToReadModelChangeNotification));\r\n    }\r\n\r\n    private connectSignalR(): ng.IPromise<void> {\r\n        const deferred = this.qService.defer<void>();\r\n\r\n        if ($.connection.hub.state === SignalR.ConnectionState.Connected) {\r\n            deferred.resolve();\r\n        } else {\r\n            $.connection.hub\r\n                .start()\r\n                .done(() => deferred.resolve())\r\n                .fail(() => deferred.reject());\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    protected abstract getCommandName(): string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/CommandHandling/CommandHandler.ts","export class SecurityService {\r\n    private currentUserName: string | null = null;\r\n\r\n    static $inject = ['$http'];\r\n\r\n    constructor(private httpService: ng.IHttpService) {\r\n    }\r\n\r\n    logIn(userName: string, password: string): ng.IPromise<void> {\r\n        const loginCommand = {\r\n            userName: userName,\r\n            password: password\r\n        };\r\n\r\n        return this.httpService.post('api/Authentication/LogIn', loginCommand)\r\n            .then(() => {\r\n                this.currentUserName = userName;\r\n            });\r\n    }\r\n\r\n    logOut(): ng.IPromise<void> {\r\n        if (!this.checkIfUserIsAuthenticated()) {\r\n            throw new Error('Current user is not authenticated.');\r\n        }\r\n        return this.httpService.post('api/Authentication/LogOut', {})\r\n            .then(() => {\r\n                this.currentUserName = null;\r\n            });\r\n    }\r\n\r\n    checkIfUserIsAuthenticated(): boolean {\r\n        return this.currentUserName !== null;\r\n    }\r\n\r\n    getCurrentUserName(): string {\r\n        if (!this.checkIfUserIsAuthenticated()) {\r\n            throw new Error('Current user is not authenticated.');\r\n        }\r\n\r\n        return this.currentUserName as string;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/Security/SecurityService.ts","import {SecurityService} from '../../Security/SecurityService';\r\nimport ModalService = angular.ui.bootstrap.IModalService;\r\n\r\nexport class SecurityUiService {\r\n    static $inject = ['securityService', '$uibModal', '$q'];\r\n\r\n    constructor(private securityService: SecurityService,\r\n        private modalService: ModalService,\r\n        private qService: ng.IQService) {\r\n    }\r\n\r\n    get currentUserName(): string | null {\r\n        return this.securityService.checkIfUserIsAuthenticated() ? this.securityService.getCurrentUserName() : null;\r\n    }\r\n\r\n    get isUserAuthenticated(): boolean {\r\n        return this.securityService.checkIfUserIsAuthenticated();\r\n    }\r\n\r\n    ensureUserIsAuthenticated(): ng.IPromise<void> {\r\n        if (this.securityService.checkIfUserIsAuthenticated()) {\r\n            return this.qService.resolve();\r\n        }\r\n\r\n        return this.showLogInDialog();\r\n    }\r\n\r\n    showLogInDialog(): ng.IPromise<void> {\r\n        const modalInstance = this.modalService.open({\r\n            component: 'loginDialog'\r\n        });\r\n\r\n        return modalInstance.result;\r\n    }\r\n\r\n    logOut(): ng.IPromise<void> {\r\n        return this.securityService.logOut();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Shared/SecurityUiService.ts","import { INamedComponentOptions } from '../../Infrastructure/INamedComponentOptions';\r\nimport {LoginDialogCtrl} from './LoginDialogCtrl';\r\n\r\nexport class LoginDialogComponent implements INamedComponentOptions {\r\n    controller = LoginDialogCtrl;\r\n    templateUrl = 'Template/Security/LoginDialog';\r\n    registerAs = 'loginDialog';\r\n    bindings = {\r\n        modalInstance: '<'\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Shared/LoginDialogComponent.ts","import {SecurityService} from '../../Security/SecurityService';\r\nimport ModalServiceInstance = angular.ui.bootstrap.IModalServiceInstance;\r\n\r\nexport class LoginDialogCtrl implements ng.IController {\r\n    modalInstance: ModalServiceInstance;\r\n\r\n    fields: AngularFormly.IFieldArray;\r\n\r\n    model: {\r\n        userName: string,\r\n        password: string\r\n    };\r\n\r\n    form: ng.IFormController;\r\n\r\n    static $inject = ['securityService'];\r\n\r\n    constructor(private securityService: SecurityService) {\r\n        this.fields = [\r\n            {\r\n                key: 'userName',\r\n                type: 'input',\r\n                templateOptions: {\r\n                    label: 'User name',\r\n                    required: true\r\n                }\r\n            },\r\n            {\r\n                key: 'password',\r\n                type: 'input',\r\n                templateOptions: {\r\n                    type: 'password',\r\n                    label: 'Password',\r\n                    required: true\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    login(): void {\r\n        if (!this.form.$valid) {\r\n            return;\r\n        }\r\n\r\n        this.securityService\r\n            .logIn(this.model.userName, this.model.password)\r\n            .then(() => {\r\n                this.modalInstance.close();\r\n            },\r\n            () => {\r\n                // TODO: create generic notification dialogs\r\n                alert('error');\r\n            });\r\n    }\r\n\r\n    cancel(): void {\r\n        this.modalInstance.dismiss();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Shared/LoginDialogCtrl.ts","import {SecurityUiService} from './SecurityUiService';\r\n\r\nexport class ApplicationCtrl implements ng.IController {\r\n    static $inject = ['securityUiService'];\r\n\r\n    constructor(public securityUiService: SecurityUiService) {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Shared/ApplicationCtrl.ts","export class Routing {\r\n    static configure($stateProvider: ng.ui.IStateProvider): void {\r\n        const states: ng.ui.IState[] = [\r\n            {\r\n                name: 'createAuction',\r\n                url: '/auction/create',\r\n                component: 'createAuction'\r\n            },\r\n            {\r\n                name: 'displayAuction',\r\n                url: '/auction/{auctionId}',\r\n                component: 'displayAuction',\r\n                resolve: {\r\n                    auctionId($stateParams: angular.ui.IStateParamsService) {\r\n                        return ($stateParams as any).auctionId;\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n\r\n        for (let state of states) {\r\n            $stateProvider.state(state);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/Routing.ts","\r\nimport { QueryHandler } from './QueryHandler';\r\nimport * as Queries from '../Messages/Queries';\r\nimport * as ReadModel from '../ReadModel';\r\n\r\nexport class GetAuctionDetailsQueryHandler extends QueryHandler<Queries.GetAuctionDetailsQuery, ReadModel.AuctionDetailsReadModel> {\r\n\tprotected getQueryName(): string {\r\n\t\treturn 'GetAuctionDetailsQuery';\r\n\t}\r\n}\r\nexport class GetAuctionListQueryHandler extends QueryHandler<Queries.GetAuctionListQuery, ReadModel.AuctionListReadModel> {\r\n\tprotected getQueryName(): string {\r\n\t\treturn 'GetAuctionListQuery';\r\n\t}\r\n}\r\n\r\nexport class AngularQueryHandlersRegistry {\r\n\tstatic queryHandlers: {[name: string]: ng.Injectable<Function>} = {\r\n\t\t\t\t\t\t\t'getAuctionDetailsQueryHandler': GetAuctionDetailsQueryHandler,\r\n\t\t\t\t\t\t\t'getAuctionListQueryHandler': GetAuctionListQueryHandler,\r\n\t\t\t\t\t};\r\n\t}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/QueryHandling/GeneratedQueryHandlers.ts","import { IQueryHandler } from './IQueryHandler';\r\nimport { QueryResultChangedSubscriptionErrorType } from './QueryResultChangedSubscriptionErrorType';\r\nimport { IPushNotificationsService } from '../Infrastructure/IPushNotificationsService';\r\n\r\nexport abstract class QueryHandler<TQuery, TResult> implements IQueryHandler<TQuery, TResult> {\r\n    static $inject = ['$http', '$q'];\r\n\r\n    constructor(private httpService: ng.IHttpService,\r\n        private qService: ng.IQService,\r\n        private pushNotificationsService: IPushNotificationsService) {\r\n    }\r\n\r\n    handle(query: TQuery): ng.IPromise<TResult> {\r\n        const url = `api/${this.getQueryName()}/Handle`;\r\n        return this.httpService.get<TResult>(url, { params: query }).then(response => response.data);\r\n    }\r\n\r\n    protected abstract getQueryName(): string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/QueryHandling/QueryHandler.ts","import { DisplayAuctionCtrl } from './DisplayAuctionCtrl';\r\nimport { INamedComponentOptions } from '../../Infrastructure/INamedComponentOptions';\r\n\r\nexport class DisplayAuctionComponent implements INamedComponentOptions {\r\n    controller = DisplayAuctionCtrl;\r\n    templateUrl = 'Template/Auctions/Display';\r\n    registerAs = 'displayAuction';\r\n    bindings = {\r\n        auctionId: '<'\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Auctions/DisplayAuctionComponent.ts","import {AuctionDetailsReadModel} from '../../ReadModel';\r\nimport {IQueryHandler} from '../../QueryHandling/IQueryHandler';\r\nimport {GetAuctionDetailsQuery} from '../../Messages/Queries';\r\n\r\nexport class DisplayAuctionCtrl implements ng.IController {\r\n    auctionId: string;\r\n    auction: AuctionDetailsReadModel;\r\n\r\n    static $inject = ['getAuctionDetailsQueryHandler'];\r\n\r\n    constructor(getAuctionDetailsQueryHandler: IQueryHandler<GetAuctionDetailsQuery, AuctionDetailsReadModel>) {\r\n        getAuctionDetailsQueryHandler.handle({\r\n                id: this.auctionId\r\n            })\r\n            .then(auction => this.auction = auction);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./Scripts/app/UI/Auctions/DisplayAuctionCtrl.ts"],"sourceRoot":""}